// Mansilla Claudio Matias - clau.mmatt@gmail.com

#include <stdio.h>
#include <stdlib.h>
#include "ctype.h"
#include "string.h"

#include "Color.h"
#include "Fecha.h"
#include "Marca.h"
#include "Servicio.h"
#include "Trabajo.h"
#include "Auto.h"


int inicializarTrabajo(eTrabajo vec[], int tam){
    int control = 0;
    if( vec != NULL && tam > 0)
    {
        for(int i=0; i < tam; i++)
        {
        	vec[i].isEmpty = 1;
        }
        control = 1;
    }
    return control;
}

int buscarIndiceLibreTrabajo(eTrabajo trabajos[], int tam, int* pIndice){

    int control = 0;
    if( trabajos != NULL && pIndice != NULL && tam > 0)
    {
        *pIndice = -1;
        for(int i=0; i < tam; i++)
        {
            if(trabajos[i].isEmpty) // busca en el array de estructuras algun indice libre
            {
                *pIndice = i;
                break;
            }
        }
        control = 1;
    }
    return control;
}



//H. ALTA TRABAJO: Se dará de alta cada ocurrencia de trabajo pidiéndole al usuario que elija un auto y un Servicio
int altaTrabajo(eTrabajo trabajos[], int tamT, eAuto autos[], int tamA,
				eServicio servicios[], int tamS, eMarca marcas[], int tamM,
				eColor colores[], int tamC, int* pProximoId ){

	int control = 0;
    int indice;
    char idAutoAux[8];
    int idServicioAux;
    eFecha fechaAux;

    eTrabajo nuevoTrabajo;

    if( trabajos != NULL && autos != NULL && servicios != NULL
    		&& tamT > 0 && tamA > 0 && tamS > 0 && pProximoId != NULL)
    {
        system("cls");
        printf("    *** Alta de nuevo trabajo ***\n\n");
        buscarIndiceLibreTrabajo(trabajos, tamT, &indice);

        if(indice == -1)
        {
            printf("No hay lugar en el sistema\n");
        }
        else
        {
        	listarAutos(autos, tamA, marcas, tamM, colores, tamC);
            printf("Ingrese el ID del auto: \n");
            fflush(stdin);
            gets(idAutoAux);
            strupr(idAutoAux);
            while( !validarAuto(autos, tamA, idAutoAux) )
            {
                printf("Id invalido. Reingrese ID del auto: \n");
                scanf("%d", &idAutoAux);
            }
            nuevoTrabajo.idAuto = idAutoAux;


            listarServicios(servicios, tamS);
            printf("Ingrese el ID del servicio: \n\n");
            fflush(stdin);
            scanf("%d",&idServicioAux);
            while ( !validarServicio(servicios, tamS, idServicioAux))
            {
                printf("Id invalido. Reingrese ID del servicio: \n");
                scanf("%d",&idServicioAux);
            }
            nuevoTrabajo.idServicio = idServicioAux;


            printf("Ingrese fecha de realizacion del trabajo dd/mm/aaaa: ");
            scanf("%02d/%02d/%0002d",
                  &fechaAux.dia,
                  &fechaAux.mes,
                  &fechaAux.anio);

            // si todos los pasos anteriores estan ok
            nuevoTrabajo.isEmpty = 0;
            nuevoTrabajo.id = *pProximoId;
            trabajos[indice] = nuevoTrabajo;
            (*pProximoId)++;
            control = 1;

            printf("Alta de trabajo realizado correctamente \n\n");
            system("pause");
        }
    }
    return control;

}


void mostrarTrabajo(eTrabajo trabajo, eServicio servicios[], int tamS){
// recibe 1 solo vector por cada llamado

	char descripServ[25];
	float precioServ;

	cargarServDescrip(servicios, tamS, trabajo.idServicio, descripServ, &precioServ);


	printf("%-02d            %8s         %02d/%02d/%d           %10s       %.2f \n",
			trabajo.id,
			trabajo.idAuto,
			trabajo.fechaServicio.dia,
			trabajo.fechaServicio.mes,
			trabajo.fechaServicio.anio,
			descripServ,
			precioServ
		);
}

int listarTrabajos(eTrabajo trabajos[], int tamT, eServicio servicios[], int tamS){

	int control = 0;
	int flagEmpty = 1;

    if( trabajos != NULL && tamT > 0 && servicios != NULL && tamS > 0 )
    {
    	system("cls");
    	printf(" 			    ** Listado de trabajos registrados ** \n");
    	printf("------------------------------------------------------------------------\n");
    	printf("   id      Auto (patente)     Fecha Trabajo       Servicio        Precio \n");
    	printf("-------------------------------------------------------------------------\n");

        for(int i=0; i < tamT; i++)
        {
            if( !trabajos[i].isEmpty)
            {
                mostrarTrabajo(trabajos[i], servicios, tamS);
                flagEmpty = 0;
            }
        }

        if(flagEmpty)
        {
            printf(" No hay trabajos registrados en el sistema\n");
        }
    	control = 1;
    }
    return control;
}

